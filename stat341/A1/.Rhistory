hist_density_plot(z,h,xrange,'Test Data', 'Test')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- mapply(kde_gaussian, y=y,y0=y0,h=h)
plot(histogram)
lines(estimate, col='red',lwd=5)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- mapply(kde_gaussian, y=y,y0=y0,h=h)
lines(estimate, col='red',lwd=5)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y, kde_gaussian,y0=y0,h=h)
lines(estimate, col='red',lwd=5)
}
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y, kde_gaussian,y0=y0,h=h)
lines(estimate, col='red',lwd=5)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=5)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9 * 100**(-1/5) * min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
# this function is just to take care of the kernel operation that's used
kernel <- function(x,h) {
return (1 / (sqrt(2*pi)*h)*exp(-1/2*(x/h)**2))
}
kde_gaussian <- function(y,y0,h){
# finally we return the KDE evaluated at x and h
return (1 / length(y) * sum(kernel(y0-y,h)))
}
hist_density_plot <- function(y,h,xrange,xlabel,title){
# plotting the histogram with our data given, as well as breaks, the limits
# being the range that we input in the function, the x axis being xlabel and
# the title being the whatever we input into the function
histogram <- hist(y, col='white', border='black',prob=TRUE,breaks='fd',xlim=xrange,xlab=xlabel,main=title)
# generating 1000 points from the minimum in xrange to the maximum in xrange
x0 <- seq(from = xrange[1], to = xrange[2], length.out = 1000)
# apply the kde_gaussian function to all of our 1000 equally distributed points
# along with the parameters y and h that we take in from hist_density_plot
x <- sapply(x0, kde_gaussian, y=y,h=h)
lines(x0,x,col='red',lwd=5)
plot(histogram)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=5)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=5)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=2)
}
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
sprintf(estimate)
lines(estimate, col='red',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
print(estimate)
lines(estimate, col='red',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
gaussian_k <- function(v, h) {
return (1/(sqrt(2*pi)*h)*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
print(estimate)
lines(estimate, col='red',lwd=2)
}
gaussian_k <- function(v, h) {
return (1/((sqrt(2*pi)*h))*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
gaussian_k <- function(v, h) {
return (1/((sqrt(2*pi)*h))*exp(-(1/2)*(v/h)^2))
}
kde_gaussian <- function(y, y0, h) {
return (1/length(y) * sum(gaussian_k(y0 - y, h)))
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
print(estimate)
lines(estimate, col='red',lwd=2)
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
print(estimate)
lines(estimate, col='red',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,10,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,1,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,1,xrange,'Range', 'Histogram')
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=2)
}
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(estimate, col='red',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,1,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,1,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,0,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,1000000,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
hist_density_plot <- function(y, h, xrange, xlabel, title) {
histogram <- hist(y,xlim=xrange,breaks="fd",xlab=xlabel,main=title)
y0 <- seq(from=xrange[1],to=xrange[2], length.out=1000)
estimate <- sapply(y0, kde_gaussian,y=y,h=h)
lines(y0,estimate, col='red',lwd=2)
lines(y0,density(y), col='blue',lwd=2)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9 * 100**(-1/5) * min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
# this function is just to take care of the kernel operation that's used
kernel <- function(x,h) {
return (1 / (sqrt(2*pi)*h)*exp(-1/2*(x/h)**2))
}
kde_gaussian <- function(y,y0,h){
# finally we return the KDE evaluated at x and h
return (1 / length(y) * sum(kernel(y0-y,h)))
}
hist_density_plot <- function(y,h,xrange,xlabel,title){
# plotting the histogram with our data given, as well as breaks, the limits
# being the range that we input in the function, the x axis being xlabel and
# the title being the whatever we input into the function
histogram <- hist(y, col='white', border='black',prob=TRUE,breaks='fd',xlim=xrange,xlab=xlabel,main=title)
# generating 1000 points from the minimum in xrange to the maximum in xrange
x0 <- seq(from = xrange[1], to = xrange[2], length.out = 1000)
# apply the kde_gaussian function to all of our 1000 equally distributed points
# along with the parameters y and h that we take in from hist_density_plot
x <- sapply(x0, kde_gaussian, y=y,h=h)
lines(x0,x,col='red',lwd=5)
plot(histogram)
}
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9 * 100**(-1/5) * min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Test Data', 'Test')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
set.seed(341)
z <- rnorm(n = 100)
xrange <- c(-4,4)
h <- 0.9*100^(-1/5)*min(sd(z),IQR(z)/1.34)
hist_density_plot(z,h,xrange,'Range', 'Histogram')
read.csv(bh100.csv)
getwd
getwd()
ls
getwd()
setwd("~/Documents/waterloo/stat341/A1")
read.csv(bh100.csv)
read.csv(bh100.csv)
read.csv(bh100.csv)
read.csv(bh100.csv)
read.csv(bh100.csv)
read.csv(bh100.csv)
read.csv(bh100.csv)
getwd()
ls()
read.csv(bh100)
read.csv(bh100.csv)
read.csv("bh100.csv")
data <- read.csv("bh100.csv")
data <- read.csv("bh100.csv")
View(data)
View(data)
View(data)
data <- read.csv("bh100.csv")
titles = data["Title"]
View(titles)
data <- read.csv("bh100.csv")
titles = data["Title"]
df <- as.data.frame(titles)
df["freq"]
View(df)
data <- read.csv("bh100.csv")
titles = data["Title"]
df <- as.data.frame(titles)
View(df)
data <- read.csv("bh100.csv")
titles = data["Title"]
df <- as.data.frame(table(titles))
data <- read.csv("bh100.csv")
titles = data["Title"]
df <- as.data.frame(table(titles))
summary(df["Freq"])
data <- read.csv("bh100.csv")
titles = data["Title"]
df <- as.data.frame(table(titles))
summary(df["Freq"])
tinytex::install_tinytex()
tinytex::install_tinytex()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
Y
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex(force=TRUE)
tinytex::reinstall_tinytex(force=TRUE)
tinytex::reinstall_tinytex() force=TRUE
tinytex::reinstall_tinytex(force = TRUE)
Sys.which('pdflatex')
